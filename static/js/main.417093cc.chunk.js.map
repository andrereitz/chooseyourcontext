{"version":3,"sources":["components/Contents/Contents.module.scss","components/ListItem/ListItem.module.scss","components/Loader/Loader.module.scss","components/Header/Header.module.scss","components/Intro/Intro.module.scss","components/AddButton/AddButton.module.scss","contexts/ClassContext.js","contexts/HooksContext.js","contexts/ReduxContext.js","assets/svg/logo.svg","components/Header/Header.js","components/Intro/Intro.js","hooks/useRandomTodo.js","hooks/useTodoFilter.js","components/Contents/ClassContextList.js","components/Contents/HooksContextList.js","components/Contents/ReduxLikeContextList.js","components/ListItem/ListItem.js","components/AddButton/AddButton.js","components/Loader/Loader.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ClassContext","React","createContext","ClassProvider","state","todos","loading","addTodo","todo","setState","prevState","toggleComplete","id","completed","map","setTodos","setLoading","action","children","this","props","Provider","value","Component","HooksContext","HooksContextProvider","ReduxContext","initialState","actionTypes","actions","payload","type","reduxLikeReducer","ReduxLikeContextProvider","useReducer","dispatch","Header","className","styles","Default","src","Logo","alt","Intro","href","useRandomTodo","data","useState","randomTodo","setRandomTodo","useEffect","regenerateRandom","Math","floor","random","length","useTodoFilter","filtered","setFiltered","slice","ClassContextList","todoContext","useContext","allTodos","setAllTodos","radomTodo","regenerate","handleTodoComplete","fetch","then","res","json","Contents","Column","CodeSection","target","index","ListItem","clickAction","HooksContextList","context","Error","useTodos","ReduxLikeContextList","ReduxContextActions","Completed","onClick","title","AddButton","Loader","useContainer","loadingText","loader","Container","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.417093cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contents\":\"Contents_Contents__3ocdO\",\"Column\":\"Contents_Column__yWRww\",\"CodeSection\":\"Contents_CodeSection__3JRyu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Default\":\"ListItem_Default__tDHXW\",\"Completed\":\"ListItem_Completed__1cwgd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Default\":\"Loader_Default__1LY5p\",\"rotate\":\"Loader_rotate__3QseU\",\"Container\":\"Loader_Container__1_orw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Default\":\"Header_Default__2xPpT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Default\":\"Intro_Default__2GHRH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddButton\":\"AddButton_AddButton__3bilp\"};","import React, { Component } from 'react';\n\nconst ClassContext = React.createContext();\n\nclass ClassProvider extends Component {\n  state = {\n    todos: [],\n    loading: true\n  };\n\n  addTodo = (todo) => {\n    this.setState((prevState) => ({ ...prevState, todos: [...this.state.todos, todo] }))\n  };\n\n  toggleComplete = (id, completed) => {\n    this.setState((prevState) => ({ ...prevState, todos: [...this.state.todos.map( todo => {\n      if(todo.id === id){\n        todo.completed = completed\n      }\n\n      return todo;\n    })] }))\n  }\n\n  setTodos = (todos) => {\n    this.setState((prevState) => ({ ...prevState, todos: todos, loading: false }))\n  };\n\n  setLoading = (action) => {\n      this.setState((prevState) => ({ ...prevState, loading: action }))\n  }\n\n  render() {\n    const { children } = this.props;\n    const { addTodo, toggleComplete, setTodos, setLoading } = this;\n\n    return (\n      <ClassContext.Provider\n        value={{\n          state: this.state,\n          addTodo,\n          toggleComplete,\n          setTodos,\n          setLoading\n        }}\n      >\n        {children}\n      </ClassContext.Provider>\n    );\n  };\n};\n\nexport default ClassContext;\n\nexport { ClassProvider };","import * as React from 'react'\n\nconst HooksContext = React.createContext();\n\nfunction useTodos() {\n        const context = React.useContext(HooksContext);\n        \n        if (!context) {\n            throw new Error(`useCount hook must be used under HooksContextProvider`)\n        }\n        \n        const [state, setState] = context;\n        \n        const addTodo = (payload) => {\n            setState({\n                ...state,\n                todos: [\n                    ...state.todos,\n                    payload\n                ]\n            });\n        }\n\n        const toggleComplete = (payload) => {\n            setState({\n                ...state,\n                todos: [...state.todos.map( todo => {\n                    if(todo.id === payload){\n                        todo.completed = !todo.completed;\n                    }\n\n                    return todo;\n                })]\n            });\n        }\n\n        const setTodos = (payload) => {\n            setState({\n                ...state,\n                todos: payload,\n                loading: false\n            });\n        }\n\n        const setLoading = (payload) => {\n            setState({\n                ...state,\n                loading: payload\n            });\n        }\n\n        return {\n            state,\n            addTodo,\n            toggleComplete,\n            setTodos,\n            setLoading\n        }\n    };\n\nfunction HooksContextProvider(props) {\n    const initialState = {\n        todos: [],\n        loading: true\n    }\n    const [state, setState] = React.useState(initialState)\n    const value = React.useMemo(() => [state, setState], [state])\n\n    return <HooksContext.Provider value={value} {...props} />\n};\n\nexport { HooksContextProvider, useTodos }\n","import React, { useReducer } from 'react';\n\nconst ReduxContext = React.createContext();\n\nconst initialState = {\n    todos: [],\n    loading: true\n}\n\nconst actionTypes = {\n    addTodo: 'ADD_TODO',\n    toggleComplete: 'TOGGLE_COMPLETE',\n    setTodos: 'SET_TODOS',\n    setLoading: 'SET_LOADING'\n}\n\nexport const actions = {\n    addTodo: (payload) => ({\n        type: 'ADD_TODO',\n        payload\n    }),\n    toggleComplete: (payload) => ({\n        type: 'TOGGLE_COMPLETE',\n        payload\n    }),\n    setTodos: (payload) => ({\n        type: 'SET_TODOS',\n        payload\n    }),\n    setLoading: (payload) => ({\n        type: 'SET_LOADING',\n        payload\n    })\n}\n\nfunction reduxLikeReducer(state, action){\n    switch(action.type){\n        case actionTypes.addTodo:\n            return { ...state, todos: [...state.todos, action.payload] };\n\n        case actionTypes.toggleComplete:\n            return { ...state, todos: [...state.todos.map( todo => {\n                if(todo.id === action.payload.id){\n                    todo.completed = action.payload.completed;\n                }\n\n                return todo;\n            })]};\n\n        case actionTypes.setTodos:\n            return { ...state, todos: action.payload, loading: false };\n\n        case actionTypes.setLoading: \n            return { ...state, loading: action.payload }\n\n        default:\n            return state;\n    }\n}\n\nfunction ReduxLikeContextProvider({ children }){\n    const [state, dispatch] = useReducer(reduxLikeReducer, initialState);\n\n    return <ReduxContext.Provider value={{ state, dispatch, actions }}> { children } </ReduxContext.Provider>\n}\n\nexport { ReduxContext, ReduxLikeContextProvider };","export default __webpack_public_path__ + \"static/media/logo.147751a4.svg\";","import Logo from '../../assets/svg/logo.svg';\nimport styles from './Header.module.scss';\n\nexport function Header(){\n    return(\n        <header className={ styles.Default }>\n            <img src={ Logo } alt=\"App logo\" />\n        </header>\n    )\n}","import styles from './Intro.module.scss';\n\nexport function Intro(){\n    return(\n        <div className={`container app-box ${styles.Default}`}>\n            <div className=\"column\">\n                <h2>Welcome</h2>\n                <ul>\n                    <li><a href=\"#class-style\">Class Style</a></li>\n                    <li><a href=\"#redux-style\">Redux Style</a></li>\n                    <li><a href=\"#hooks-style\">Hooks Style</a></li>\n                </ul>\n            </div>\n            <div className=\"column\">\n                <p>The React Context API is extremely useful and flexible.</p>\n                <p>This flexibility sometimes generates doubts about architecture and implementation strategies.</p>\n                <p>This website suggests three strategies for Context API implementation that can be combined or modified according to the user preference.</p>\n            </div>\n        </div>\n    )\n}","import { useState, useEffect } from 'react';\n\nexport function useRandomTodo(data = []){\n    const [randomTodo, setRandomTodo] = useState();\n\n    useEffect(() => {\n        regenerateRandom();\n    }, [data])\n\n    const regenerateRandom = () => setRandomTodo(data[Math.floor(Math.random() * data.length)]);\n\n    return [\n        randomTodo,\n        regenerateRandom\n    ]\n}","import { useState, useEffect } from 'react';\n\nexport function useTodoFilter(todos){\n    const [filtered, setFiltered] = useState([]);\n\n    useEffect(() => {\n        setFiltered(todos.slice(0, 5));\n    }, [todos]);\n    \n    return filtered;\n}","import styles from './Contents.module.scss';\n\nimport { useContext, useEffect, useState } from \"react\";\nimport ClassContext from \"../../contexts/ClassContext\";\n\nimport { useRandomTodo } from \"../../hooks/useRandomTodo\";\nimport { useTodoFilter } from '../../hooks/useTodoFilter';\n\nimport { ListItem, AddButton, Loader } from '../';\n\nexport function ClassContextList(){\n    const todoContext = useContext(ClassContext);\n    const { todos, loading } = todoContext.state;\n    \n    const [allTodos, setAllTodos] = useState([]);\n    const [radomTodo, regenerate] = useRandomTodo(allTodos);\n    const filtered = useTodoFilter(allTodos);\n\n    useEffect(() => {\n        fetch('https://jsonplaceholder.typicode.com/todos')\n          .then(res => res.json())\n          .then(res => {\n            setAllTodos(res);\n          })\n    }, []);    \n\n    useEffect(() => {\n        todoContext.setTodos(filtered);\n    }, [filtered])\n\n    function handleTodoAdd(){\n        todoContext.addTodo(radomTodo);\n        regenerate();\n    }\n\n    function handleTodoComplete(id, completed){\n        todoContext.toggleComplete(id, completed);\n    }\n\n    if(loading){\n        return (\n            <div className={`container app-box ${styles.Contents}`}>\n                <Loader />\n            </div>\n        )\n    }\n\n    return(\n        <div className={`container app-box ${styles.Contents}`}>\n            <div className={`${styles.Column}`}>\n                <h2 id=\"class-style\">The “Class Style” strategy</h2>\n                <h3>Context API Exporting Provider Class</h3>\n                <p>State of the context is the state of the class used to export the Provider.</p>\n                <p>The advantage of this approach is its easier to understand for people who are not used to Redux or complex Hooks. The provider and provider value is also exported from the same place.</p>\n                <p>All data and methods related to this context are defined in the same file, a provider is exported as a class and used under the app with useContext Hook.</p>\n            </div>\n            <div className={`${styles.Column} ${styles.CodeSection}`}>\n                <div>\n                    <h3>State Implementation example:</h3>\n                    <span><i className=\"fas fa-code-branch\"></i> <a href=\"https://github.com/andrereitz/chooseyourcontext/blob/master/src/contexts/ClassContext.js\" target=\"_blank\">Check out on Github</a></span>\n                </div>\n                <ul>\n                    {todos.length > 0 && todos.map((todo, index) => (\n                        <ListItem key={`cc-todo-${index}`} todo={todo} clickAction={ handleTodoComplete } />\n                    ))}\n                </ul>\n                <AddButton clickAction={ handleTodoAdd }>\n                    Add Random Todo\n                </AddButton>\n            </div>\n        </div>\n    )\n}","import styles from './Contents.module.scss';\n\nimport { useEffect, useState } from 'react';\nimport { useTodos } from \"../../contexts/HooksContext\";\n\nimport { useRandomTodo } from \"../../hooks/useRandomTodo\";\nimport { useTodoFilter } from '../../hooks/useTodoFilter';\n\nimport { ListItem, AddButton, Loader } from '../';\n\nexport function HooksContextList(){\n    const { state, addTodo, setTodos, toggleComplete } = useTodos();\n    const { todos, loading } = state;\n\n    const [allTodos, setAllTodos] = useState([]);\n    const [radomTodo, regenerate] = useRandomTodo(allTodos);\n    const filtered = useTodoFilter(allTodos);\n\n    useEffect(() => {\n        fetch('https://jsonplaceholder.typicode.com/todos')\n          .then(res => res.json())\n          .then(res => {\n            setAllTodos(res);\n          })\n    }, []);  \n\n    useEffect(() => {\n        setTodos(filtered);\n    }, [filtered])\n\n    function handleTodoAdd(){\n        addTodo(radomTodo);\n        regenerate();\n    }\n\n    function handleTodoComplete(id){\n        toggleComplete(id);\n    }\n\n    if(loading){\n        return (\n            <div className={`container app-box ${styles.Contents}`}>\n                <Loader />\n            </div>\n        )\n    }\n\n    return(\n        <div className={`container app-box ${styles.Contents}`}>\n            <div className={`${styles.Column}`}>\n                <h2 id=\"hooks-style\">The “Hooks Style” strategy</h2>\n                <h3>State management via Hooks</h3>\n                <p>State of this strategy can be abstracted (as current implementation) or scoped. A more scoped implementation would require more state fragmentation as it would not allow a multi-level state.</p>\n                <p>All the methods and hooks in this case can also be defined in a single file, but could also be segmented, for exemple, separating hooks in other folder.</p>\n                <p>This in implementation can be a little confusing compared to the others, but offers good flexibility.</p>\n                <p>A hibrid implementation with the \"Redux Style\", using useReducer hook, could offer better architecture for this implementation.</p>\n            </div>\n            <div className={`${styles.Column} ${styles.CodeSection}`}>\n                <div>\n                    <h3>State Implementation example:</h3>\n                    <span><i className=\"fas fa-code-branch\"></i> <a href=\"https://github.com/andrereitz/chooseyourcontext/blob/master/src/contexts/HooksContext.js\" target=\"_blank\">Check out on Github</a></span>\n                </div>\n                <ul>\n                    {todos.length > 0 && todos.map((todo, index) => (\n                        <ListItem key={`cc-todo-${index}`} todo={todo} clickAction={ handleTodoComplete } />\n                    ))}\n                </ul>\n                <AddButton clickAction={ handleTodoAdd }>\n                    Add Random Todo\n                </AddButton>\n            </div>\n        </div>\n    )\n}","import styles from './Contents.module.scss';\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { ReduxContext, actions as ReduxContextActions } from \"../../contexts/ReduxContext\";\n\nimport { useRandomTodo } from \"../../hooks/useRandomTodo\";\nimport { useTodoFilter } from '../../hooks/useTodoFilter';\n\nimport { ListItem, AddButton, Loader } from '../';\n\nexport function ReduxLikeContextList(){\n    const todoContext = useContext(ReduxContext);\n    const { todos, loading } = todoContext.state;\n    const { setTodos, toggleComplete } = todoContext.actions;\n\n    const [allTodos, setAllTodos] = useState([]);\n    const [radomTodo, regenerate] = useRandomTodo(allTodos);\n    const filtered = useTodoFilter(allTodos);\n\n    useEffect(() => {\n        fetch('https://jsonplaceholder.typicode.com/todos')\n          .then(res => res.json())\n          .then(res => {\n            setAllTodos(res);\n          })\n    }, []);  \n\n    useEffect(() => {\n        todoContext.dispatch(setTodos(filtered))\n    }, [filtered])\n\n    function handleTodoAdd(){\n        todoContext.dispatch(ReduxContextActions.addTodo(radomTodo));\n        regenerate();\n    }\n\n    function handleTodoComplete(id, completed){\n        todoContext.dispatch(toggleComplete({ id, completed }))\n    }\n\n    if(loading){\n        return (\n            <div className={`container app-box ${styles.Contents}`}>\n                <Loader />\n            </div>\n        )\n    }\n\n    return(\n        <div className={`container app-box ${styles.Contents}`}>\n            <div className={`${styles.Column}`}>\n                <h2 id=\"redux-style\">The “Reducer Style” strategy</h2>\n                <h3>Context API Exporting a \"Redux Like\" Reducer</h3>\n                <p>State of the context is the reducer state defined in the context file.</p>\n                <p>Similar to the previous strategy, related files to this context are defined in the same file. The provider and provider value are expoted from the same place aswell, but this time with a functional component.</p>\n                <p>For the action creators you can export them from the file itself, or use it from the Provider value passed down. Both implementations were illustrated in this example</p>\n                <p>Although this implementation looks more complex, it gives a solid base for scalability and developers used to Flux/Redux style architecture will easily adapt to this strategy.</p>\n            </div>\n            <div className={`${styles.Column} ${styles.CodeSection}`}>\n                <div>\n                    <h3>State Implementation example:</h3>\n                    <span><i className=\"fas fa-code-branch\"></i> <a href=\"https://github.com/andrereitz/chooseyourcontext/blob/master/src/contexts/ReduxContext.js\" target=\"_blank\">Check out on Github</a></span>\n                </div>\n                <ul>\n                    {todos.length > 0 && todos.map((todo, index) => (\n                        <ListItem key={`cc-todo-${index}`} todo={todo} clickAction={ handleTodoComplete } />\n                    ))}\n                </ul>\n                <AddButton clickAction={ handleTodoAdd }>\n                    Add Random Todo\n                </AddButton>\n            </div>\n        </div>\n    )\n}","import styles from './ListItem.module.scss';\nimport PropTypes from 'prop-types';\n\nexport function ListItem({ todo, clickAction }){\n    return(\n        <li \n            className={`${styles.Default} ${todo.completed ? styles.Completed : ''}`}\n        >\n            <i className={todo.completed ? 'far fa-check-circle' : 'far fa-circle'} onClick={ () => clickAction(todo.id, !todo.completed) }></i>\n            <p>{todo.title}</p>\n        </li>\n    )\n}\n\nListItem.propTypes = {\n    todo: PropTypes.object,\n    clickAction: PropTypes.func.isRequired\n}","import styles from './AddButton.module.scss';\n\nexport const AddButton = ({clickAction, children}) => {\n    return(\n        <button className={styles.AddButton} onClick={() => clickAction()}>{children}</button>\n    )\n}","import { Fragment } from 'react';\nimport styles from './Loader.module.scss';\n\nexport const Loader = ({ useContainer = true, loadingText }) => {\n    \n    const loader = (\n        <div className={ styles.Default }>{ loadingText }</div>\n    )\n\n    return(\n        <Fragment>\n            {\n                useContainer \n                    ?\n                        <div className={ styles.Container }>{ loader }</div>\n                    :\n                        loader\n            }\n        </Fragment>\n    )\n}\n","import './App.scss';\nimport { ClassProvider } from './contexts/ClassContext';\nimport { HooksContextProvider } from './contexts/HooksContext';\nimport { ReduxLikeContextProvider } from './contexts/ReduxContext';\n\nimport { Header, Intro } from './components';\nimport { ClassContextList, HooksContextList, ReduxLikeContextList } from './components';\n\nfunction App() {\n  return (\n    <ClassProvider>\n      <HooksContextProvider>\n        <ReduxLikeContextProvider>\n            <Header />\n            <div className=\"content\">\n              <Intro />\n              <ClassContextList />\n              <ReduxLikeContextList />\n              <HooksContextList />\n            </div>\n        </ReduxLikeContextProvider>\n      </HooksContextProvider>\n    </ClassProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}